!|FlowFixture|

!4 case2
|command_var|$RC$=0| 

|start_if|{expr: false}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: true}|

|command_var|$RC$=2|

|end_elseif|

|start_else| 

|command_var|$RC$=3|

|end_else|

|assertEquals|2|$RC$|


!4 case1
|command_var|$RC$=0| 

|start_if|{expr: true}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: false}|

|command_var|$RC$=2|

|end_elseif|

|start_else| 

|command_var|$RC$=3| 

|end_else|

|assertEquals|1|$RC$|


!4 case2
|command_var|$RC$=0| 

|start_if|{expr: false}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: true}|

|command_var|$RC$=2|

|end_elseif|

|start_else| 

|command_var|$RC$=3|

|end_else|

|assertEquals|2|$RC$|


!4 case3
|command_var|$RC$=0| 

|start_if|{expr: false}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: false}|

|command_var|$RC$=2|

|end_elseif|

|start_else| 

|command_var|$RC$=3| 

|end_else|

|assertEquals|3|$RC$|


!4 case4
|command_var|$RC$=0| 

|start_if|{expr: true}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: false}|

|command_var|$RC$=2|

|end_elseif|

|start_elseif|{expr: false}|

|command_var|$RC$=3|

|end_elseif|

|start_else| 

|command_var|$RC$=4| 

|end_else|

|assertEquals|1|$RC$|


!4 case5
|command_var|$RC$=0| 

|start_if|{expr: true}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: false}|

|command_var|$RC$=2|

|end_elseif|

|start_elseif|{expr: true}|

|command_var|$RC$=3|

|end_elseif|

|start_else| 

|command_var|$RC$=4| 

|end_else|

|assertEquals|3|$RC$|


!4 case4
|command_var|$RC$=0| 

|start_if|{expr: false}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: false}|

|command_var|$RC$=2|

|end_elseif|

|start_elseif|{expr: false}|

|command_var|$RC$=3|

|end_elseif|

|start_else| 

|command_var|$RC$=4| 

|end_else|

|assertEquals|4|$RC$|


!4 case5
|command_var|$RC$=0| 

|start_if|{expr: false}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=2|

|end_if|

|end_elseif|

|start_else| 

|command_var|$RC$=3| 

|end_else|

|assertEquals|2|$RC$|


!4 case6
|command_var|$RC$=0| 

|start_if|{expr: false}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: true}|

|start_if|{expr: false}|

|command_var|$RC$=2|

|end_if|

|end_elseif|

|start_else| 

|command_var|$RC$=3| 

|end_else|

|assertEquals|0|$RC$|


!4 case7
|command_var|$RC$=0| 

|start_if|{expr: false}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: false}|

|start_if|{expr: false}|

|command_var|$RC$=2|

|end_if|

|end_elseif|

|start_else| 

|start_if|{expr: true}|

|command_var|$RC$=3|

|end_if|

|end_else|

|assertEquals|3|$RC$|


!4 case8
|command_var|$RC$=0| 

|start_if|{expr: false}| 

|start_if|{expr: true}|

|start_if|{expr: true}|

|command_var|$RC$=1|

|end_if|

|end_if|

|end_if|

|start_elseif|{expr: false}|

|start_if|{expr: false}|

|command_var|$RC$=2|

|end_if|

|end_elseif|

|start_else| 

|start_if|{expr: false}|

|command_var|$RC$=3|

|end_if|

|end_else|

|assertEquals|0|$RC$|
